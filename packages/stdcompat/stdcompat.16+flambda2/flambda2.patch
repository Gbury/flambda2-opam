commit 5c8b178933d643dda43da4c3ea7ab313f7a204b5
Author: Guillaume Bury <guillaume.bury@gmail.com>
Date:   Wed Aug 25 15:40:23 2021 +0200

    Add flambda2 conditional compilation

diff --git a/configure.ac b/configure.ac
index 7e5819a..f75cd6d 100644
--- a/configure.ac
+++ b/configure.ac
@@ -84,6 +84,14 @@ AS_IF([test `printf "$OCAMLVERSION\n3.12.0" | sort | head -n1` = 3.12.0],
     [[`echo 'Sys.os_type;;' | $OCAML | sed -n 's/^\# - : string = "\(.*\)"$/\1/p'`]])])
 AC_MSG_RESULT([$target_os_type])
 
+AC_MSG_CHECKING([for flambda2])
+
+AC_SUBST([OCAML_FLAMBDA2],
+    [`$OCAMLBEST -config | sed -n 's/^flambda2: \(.*\)$/\1/p' | sed 's/\r//'`])
+AS_IF([test "x$OCAML_FLAMBDA2" = "x"], AC_SUBST([OCAML_FLAMBDA2], [[false]]))
+
+AC_MSG_RESULT([$OCAML_FLAMBDA2])
+
 AC_ARG_ENABLE([magic],
             [AS_HELP_STRING([--enable-magic],
               [[use Obj.magic in redefinitions when possible (default)]]),
@@ -166,6 +174,10 @@ AS_IF([test "x$target_os_type" = "xUnix"],
   [AC_WITH_BLOCK([UNIX])],
   [AC_WITHOUT_BLOCK([UNIX])])
 
+AS_IF([test "x$OCAML_FLAMBDA2" = "xtrue"],
+  [AC_WITH_BLOCK([FLAMBDA2])],
+  [AC_WITHOUT_BLOCK([FLAMBDA2])])
+
 AM_CONDITIONAL(OCAML_SUPPORTS_BYTECODE, [test "x$OCAMLC" != "x"])
 
 AM_CONDITIONAL(OCAML_SUPPORTS_NATIVE, [test "x$OCAMLOPT" != "x"])
diff --git a/stdcompat__pervasives_s.mli.in b/stdcompat__pervasives_s.mli.in
index ab9ab1d..f2588a2 100644
--- a/stdcompat__pervasives_s.mli.in
+++ b/stdcompat__pervasives_s.mli.in
@@ -1033,11 +1033,20 @@ module type S = sig
   @since 3.07.0: external float_of_string : string -> float = "float_of_string"
    *)
   
+  @BEGIN_WITH_FLAMBDA2@
+  external fst : ('a * 'b) -> 'a = "%field0_immut"
+  (** Alias for {!Pervasives.fst} *)
+  
+  external snd : ('a * 'b) -> 'b = "%field1_immut"
+  (** Alias for {!Pervasives.snd} *)
+  @END_WITH_FLAMBDA2@
+  @BEGIN_WITHOUT_FLAMBDA2@
   external fst : ('a * 'b) -> 'a = "%field0"
   (** Alias for {!Pervasives.fst} *)
   
   external snd : ('a * 'b) -> 'b = "%field1"
   (** Alias for {!Pervasives.snd} *)
+  @END_WITHOUT_FLAMBDA2@
   
   val (@) : 'a list -> 'a list -> 'a list
   (** Alias for {!Pervasives.@} *)
